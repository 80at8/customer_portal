version: '3.6'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: sonarsoftware/customerportal
    command: 
      - "bash"
      - "-c"
      - '/var/www/html/deploy/init.sh && exec apache2-foreground | tail -f /var/www/html/storage/logs/laravel.log'
    container_name: sonar-customerportal
    restart: always
    tty: true
    volumes:
      - storage:/var/www/html/storage
    env_file:
     - .env
    environment:
      REDIS_HOST: redis
    depends_on:
      - redis

  redis:
    image: redis:5.0.4-alpine 
    restart: always

  nginx:
    image: nginx:1.15-alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deploy/conf/nginx/sonar-customerportal.template:/etc/nginx/conf.d/sonar-customerportal.template
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'envsubst \\$$NGINX_HOST < /etc/nginx/conf.d/sonar-customerportal.template > /etc/nginx/conf.d/default.conf; while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    env_file:
     - .env
    depends_on:
      - app

  certbot:
    image: certbot/certbot
    restart: always
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot

  watchtower:
    image: v2tec/watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: sonar-customerportal

volumes:
  storage:
    driver: local
